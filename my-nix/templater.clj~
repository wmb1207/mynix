(ns my-nix.templater
  (:require [clojure.string :as str]
            [my-nix.templates :as templates]))

(defrecord TemplateField [^String key
                          ^String value])

(defrecord Template [^String name
                     ^String output
                     ^String content
                     ^clojure.lang.IPersistentCollection fields])



(defn apply-tmpl
  [tmpl]
  (spit (:output tmpl)
        (reduce (fn [acc [field value]]
                  (str/replace acc field value))
                (:content tmpl)
                (:fields tpml))))

(defn apply-tmpls!
  [tmpls]
  (try
    (when-not (list? tmpls)
      (apply-tmpl tmpls)
      (do
        (doseq [tmpl [tmpls]]
          (apply-tmpl tmpl))))
    (catch Exception e
      (println e))))
